# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. For Linux apps, add an app setting called WEBSITE_WEBDEPLOY_USE_SCM and set it to true in your app **before downloading the file**.
#      For more instructions see: https://docs.microsoft.com/azure/app-service/configure-common#configure-app-settings
#
# 2. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: '14.x'                # set this to the node version to use

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install Dependencies
      run: npm install      
    - name: Build Project
      run: npm run build --if-present
      env:
        SOCIAL_EMAIL: ${{ secrets.SOCIAL_EMAIL }}
        SOCIAL_YOUTUBE: ${{ secrets.SOCIAL_YOUTUBE }}
        SOCIAL_LINKEDIN: ${{ secrets.SOCIAL_LINKEDIN }}
        SOCIAL_STEAM: ${{ secrets.SOCIAL_STEAM }}
        SOCIAL_DISCORD: ${{ secrets.SOCIAL_DISCORD }}
        SOCIAL_GITHUB: ${{ secrets.SOCIAL_GITHUB }}
        
#   - name: Make envfile
#     uses: SpicyPizza/create-envfile@v1
#     with:
#       SOCIAL_EMAIL: ${{ secrets.SOCIAL_EMAIL }}
#       SOCIAL_YOUTUBE: ${{ secrets.SOCIAL_YOUTUBE }}
#       SOCIAL_LINKEDIN: ${{ secrets.SOCIAL_LINKEDIN }}
#       SOCIAL_STEAM: ${{ secrets.SOCIAL_STEAM }}
#       SOCIAL_DISCORD: ${{ secrets.SOCIAL_DISCORD }}
#       SOCIAL_GITHUB: ${{ secrets.SOCIAL_GITHUB }}
#         
#   - name: npm install, build, and test
#     run: |
#       npm install
#       npm run build --if-present
#       npm run test --if-present

    - name: Clear Generated Folder
      uses: appleboy/ssh-action@master
      with:
        script: ${{ secrets.HOST_COMMAND }}
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USER }}
        password: ${{ secrets.HOST_PASS }}

    - name: Copy build to server
      uses: garygrossgarten/github-action-scp@release
      with:
        local: ${{ github.workspace }}/dist
        remote: ${{ secrets.BUILD_DIR }}
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USER }}
        password: ${{ secrets.HOST_PASS }}
